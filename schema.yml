openapi: 3.0.3
info:
  title: Library
  description: Library example
  version: 1.0.0
tags:
  - name: book
    description: Books
  - name: user
    description: Users
paths:
  /book/{id}:
    get:
      tags:
        - book
      summary: Get info about the book
      operationId: getBook
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /book/{id}/rent:
    post:
      tags:
        - book
      summary: Rent a book
      operationId: rentBook
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /book/{id}/return:
    post:
      tags:
        - book
      summary: Return a book
      operationId: returnBook
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /book/add:
    post:
      tags:
        - book
      summary: Add a new book
      operationId: addBook
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewBookMultipart'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /book/{id}/remove:
    post:
      tags:
        - book
      summary: Remove a book
      operationId: removeBook
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemovedItem'

components:
  schemas:
    Book:
      title: Book
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        author:
          type: string
        available:
          type: boolean
    NewBookMultipart:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        cover:
          type: string
          format: binary
    RemovedItem:
      title: Removed item
      type: object
      properties:
        removedId:
          type: string
